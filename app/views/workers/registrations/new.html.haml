.flex-style
  .auth_form.animate__animated.animate__fadeIn
    .logo.animate__animated.animate__zoomIn= image_tag "Acell.logo.svg"
    .make-account-title
      .make-account-border
      %h2 社員情報の登録
    %h3 
      %i.fas.fa-info-circle.make_account_information_mark
      サービスを利用する為に必要な情報です。間違いのないようご入力お願いします。
    = form_with model: @worker, url: worker_registration_path, local: true do |f|
      - if flash[:notice] == "会社アカウントが登録されました！"
        #flash-login
          %i.fas.fa-check-circle.error-icon-big
            %span
              = flash[:notice]
      - if @worker.errors.any?
        #error_explanation
          %i.fas.fa-exclamation-circle.error-icon-big
          %h2
            申し訳ございません。入力不備があります。
          %h3
            お手数ですが、入力項目をご確認のうえ、再度ご入力ください。
      .filed.support-message
        .description-company-make
          %p - 会社アカウント情報 -
          %table
            %tr
              %th{rowspan: 4}= image_tag current_company.image, class: "company-image-header"
              %td.title{colspan: 3} - 会社名 -
            %tr
              %td.date{colspan: 3}="#{current_company.name}" 
            %tr
              %td.title{colspan: 3} - 会社アカウントID -
            %tr
              %td.date{colspan: 3}="#{current_company.company_login_id}"
      = f.hidden_field :company_id, :value => current_company.id
      .field
        .input-title
          %span.must
            必須
          = f.label :worker_login_id, "社員アカウントID"
        = f.text_field :worker_login_id, autofocus: true,placeholder: "例) ABcd123"
      - if @worker.errors.include?(:worker_login_id)
        -if @worker.errors.full_messages_for(:worker_login_id).first.length >= 40
          .error-longer
            %i.fas.fa-exclamation-circle.error-icon
            = @worker.errors.full_messages_for(:worker_login_id).first
        -else
          .error
            %i.fas.fa-exclamation-circle.error-icon
            = @worker.errors.full_messages_for(:worker_login_id).first
      .form-countion
        %i.fas.fa-exclamation-triangle.company_login_id_countion
        社員アカウントIDはサービスを利用する為に必要な情報です。忘れないようにメモ等で情報を保管下さい。
      .chain-border
      .field
        .input-title
          %span.must
            必須
          = f.label :password, "パスワード"
        = f.password_field :password, placeholder: "6文字以上で入力ください", class: 'password-input'
        %i.fas.fa-eye.password-eye
      - if @worker.errors.include?(:password)
        .error
          %i.fas.fa-exclamation-circle.error-icon
          = @worker.errors.full_messages_for(:password).first
      .chain-border
      .field
        .input-title
          %span.must
            必須
          = f.label :password_confirmation, "確認用パスワード"
        = f.password_field :password_confirmation, placeholder: "6文字以上で入力ください", class: 'password-confirmation-input'
        %i.fas.fa-eye.password-confirmation-eye
      - if @worker.errors.include?(:password_confirmation)
        .error
          %i.fas.fa-exclamation-circle.error-icon
          = @worker.errors.full_messages_for(:password_confirmation).first
      .form-countion
        %i.fas.fa-exclamation-triangle.company_login_id_countion
        パスワードもサービスを利用する為に必要な情報です。忘れないようにメモ等で情報を保管下さい。
      .chain-border
      .compact-wrapper
        .field
          .input-title.conpact
            .in-conpact
              %span.must
                必須
              = f.label :last_name, "姓" 
            = f.text_field :last_name, placeholder: "例) 不動", class: 'conpact_input'
        .field
          .input-title.conpact
            .in-conpact
              %span.must
                必須
              = f.label :first_name, "名" 
            = f.text_field :first_name, placeholder: "例) 太郎", class: 'conpact_input'
      .error-wrapper
        - if @worker.errors.include?(:last_name)
          -if @worker.errors.full_messages_for(:last_name).first.length >= 15
            .error-line1
              .error-longer
                %i.fas.fa-exclamation-circle.error-icon
                = @worker.errors.full_messages_for(:last_name).first
          -else
            .error-line1
              .error
                %i.fas.fa-exclamation-circle.error-icon
                = @worker.errors.full_messages_for(:last_name).first
        - if @worker.errors.include?(:first_name)
          -if @worker.errors.full_messages_for(:first_name).first.length >= 15
            .error-line2
              .error-longer
                %i.fas.fa-exclamation-circle.error-icon
                = @worker.errors.full_messages_for(:first_name).first
          -else
            .error-line2
              .error
                %i.fas.fa-exclamation-circle.error-icon
                = @worker.errors.full_messages_for(:first_name).first
      .chain-border
      .compact-wrapper
        .field
          .input-title.conpact
            .in-conpact
              %span.must
                必須
              = f.label :last_name_kana, "姓(カナ)" 
            = f.text_field :last_name_kana, placeholder: "例) フドウ", class: 'conpact_input'
        .field
          .input-title.conpact
            .in-conpact
              %span.must
                必須
              = f.label :first_name_kana, "名(カナ)" 
            = f.text_field :first_name_kana, placeholder: "例) タロウ", class: 'conpact_input'
      .error-wrapper
        - if @worker.errors.include?(:last_name_kana)
          -if @worker.errors.full_messages_for(:last_name_kana).first.length >= 15
            .error-line1
              .error-longer
                %i.fas.fa-exclamation-circle.error-icon
                = @worker.errors.full_messages_for(:last_name_kana).first
          -else
            .error-line1
              .error
                %i.fas.fa-exclamation-circle.error-icon
                = @worker.errors.full_messages_for(:last_name_kana).first
        - if @worker.errors.include?(:first_name_kana)
          -if @worker.errors.full_messages_for(:first_name_kana).first.length >= 15
            .error-line2
              .error-longer
                %i.fas.fa-exclamation-circle.error-icon
                = @worker.errors.full_messages_for(:first_name_kana).first
          -else
            .error-line2
              .error
                %i.fas.fa-exclamation-circle.error-icon
                = @worker.errors.full_messages_for(:first_name_kana).first
      .chain-border
      .field
        .input-title
          %span.must
            必須
          = f.label :email, "メールアドレス"
        = f.email_field :email, placeholder: "例) satotaro@gmail.com"
      - if @worker.errors.include?(:email)
        .error
          %i.fas.fa-exclamation-circle.error-icon
          = @worker.errors.full_messages_for(:email).first
      .chain-border
      .field
        .input-title
          %span.must
            必須
          = f.label :image, "プロフィール画像"
        = f.file_field :image, id:"item-image", autofocus: true
      - if @worker.errors.include?(:image)
        .error
          %i.fas.fa-exclamation-circle.error-icon
          = @worker.errors.full_messages_for(:image).first
      .chain-border
      .field
        .input-title
          %span.must
            必須
          = f.label :gender, "性別"
        .gender-flex  
          = f.radio_button :gender, FALSE, class: 'fa in_logo input_radio'
          %i.fas.fa-mars
          男
          = f.radio_button :gender, TRUE, class: 'fa in_logo input_radio'
          %i.fas.fa-venus
          女
      - if @worker.errors.include?(:gender)
        .error
          %i.fas.fa-exclamation-circle.error-icon
          = @worker.errors.full_messages_for(:gender).first
      .chain-border
      .field
        .input-title
          %span.must
            必須
          = f.label :character_id, "自分の性格" 
        = f.collection_select(:character_id, Character.all, :id, :name, {}, {class:"select-box"}) 
      - if @worker.errors.include?(:character_id)
        .error
          %i.fas.fa-exclamation-circle.error-icon
          = @worker.errors.full_messages_for(:character_id).first
      .chain-border
      .field
        .input-title
          %span.must
            必須
          = f.label :position_id, "役職" 
        = f.collection_select(:position_id, Position.all, :id, :name, {}, {class:"select-box"}) 
      - if @worker.errors.include?(:position_id)
        .error
          %i.fas.fa-exclamation-circle.error-icon
          = @worker.errors.full_messages_for(:position_id).first
      .chain-border
      .field
        .input-title
          %span.must
            必須
          = f.label :born, "誕生年月日" 
        .birth-wrapper
          = raw sprintf(                               |
            f.date_select(                             |
              :born,                                   |
              class:'select-birth',                    |
              id:"birth-date",                         |
              use_month_numbers: true,                 |
              prompt:'--',                             |
              start_year: 1930,                        |
              end_year: (Time.now.year - 5),           |
              date_separator: '%s'),                   |
            "<p> 年 </p>", "<p> 月 </p>") + "<p> 日 </p>" |
      - if @worker.errors.include?(:born)
        .error
          %i.fas.fa-exclamation-circle.error-icon
          = @worker.errors.full_messages_for(:born).first
      .chain-border
      .field
        .input-title
          %span.must.optional 
            任意
          = f.label :qualification_id, "資格" 
        = f.collection_select(:qualification_id, Qualification.all, :id, :name, {}, {class:"select-box"}) 
      .submit-recaptcha-wrap
        = recaptcha_tags 
        = f.button 'アカウント作成', class: "create-account",type: 'button', onclick: 'submit();'
      - if @worker.errors.include?(:base)
        .error-recaptcha
          %i.fas.fa-exclamation-circle.error-icon
          = @worker.errors.full_messages_for(:base).first
    -# = render "companies/shared/links"

  .button-back-ground.animate__animated.animate__fadeInRight
    = link_to new_worker_session_path, class: "move-button" do
      %i.fas.fa-sign-in-alt.exit-or-in
      .exit-or-in-comment
        社員ログイン
  .button-back-ground-2.animate__animated.animate__fadeInRight
    = link_to destroy_company_session_path, class: "move-button", method: :delete do
      %i.fas.fa-sign-out-alt.exit-or-in
      .exit-or-in-comment
        ログアウト
  .mini-width-menu.animate__animated.animate__fadeInRight
    %i.fas.fa-list-ul
      メニュー
    .menu
      = link_to "社員ログイン", new_worker_session_path
      = link_to "ログアウト", destroy_company_session_path, method: :delete

.worker-border.animate__animated.animate__fadeInLeftBig